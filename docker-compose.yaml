version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT}:${PORT}'
    depends_on:
      - postgres
      - redis
    environment:
      DB_HOST: '${DB_HOST}'
      DB_PORT: '${DB_PORT}'
      DB_NAME: '${DB_NAME}'
      DB_USER: '${DB_USER}'
      DB_PASSWORD: '${DB_PASSWORD}'
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: '${DB_NAME}'
      POSTGRES_USER: '${DB_USER:-admin}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-admin}'
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - 'pg-data:/var/lib/postgresql/data'
      - './docker/pgsql/init.sql:/docker-entrypoint-initdb.d/10-init.sql'
    networks:
      - app-network
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - '${DB_NAME}'
        - '-U'
        - '${DB_USER}'
      retries: 3
      timeout: 5s

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    networks:
      - app-network
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis-data:/data

networks:
  app-network:
    driver: bridge

volumes:
  pg-data:
    driver: local
  redis-data:
